[{"D:\\firas\\workspaces\\bookshelf\\web\\src\\index.js":"1","D:\\firas\\workspaces\\bookshelf\\web\\src\\App.js":"2","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\Header.jsx":"3","D:\\firas\\workspaces\\bookshelf\\web\\src\\ColorModeSwitcher.js":"4","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\SidebarToggler.jsx":"5","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\HomePage.jsx":"6","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\SearchPage.jsx":"7","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\LoginPage.jsx":"8","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\ErrorMessage.jsx":"9","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\SignupPage.jsx":"10","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\BookPage.jsx":"11","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\BooksPage.jsx":"12"},{"size":289,"mtime":1610185912889,"results":"13","hashOfConfig":"14"},{"size":1361,"mtime":1610633528507,"results":"15","hashOfConfig":"14"},{"size":1000,"mtime":1610185912890,"results":"16","hashOfConfig":"14"},{"size":618,"mtime":1610185912888,"results":"17","hashOfConfig":"14"},{"size":2164,"mtime":1610635346272,"results":"18","hashOfConfig":"14"},{"size":3476,"mtime":1610186561778,"results":"19","hashOfConfig":"14"},{"size":1282,"mtime":1610188323423,"results":"20","hashOfConfig":"14"},{"size":4000,"mtime":1610189492150,"results":"21","hashOfConfig":"14"},{"size":353,"mtime":1610189390468,"results":"22","hashOfConfig":"14"},{"size":5002,"mtime":1610189632171,"results":"23","hashOfConfig":"14"},{"size":120,"mtime":1610632080963,"results":"24","hashOfConfig":"14"},{"size":126,"mtime":1610633512436,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wbh7gz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\firas\\workspaces\\bookshelf\\web\\src\\index.js",[],["56","57"],"D:\\firas\\workspaces\\bookshelf\\web\\src\\App.js",["58"],"D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\Header.jsx",["59","60"],"import React from 'react';\r\nimport { Box, Text, Flex, Heading, IconButton } from '@chakra-ui/react';\r\nimport SidebarToggler from './SidebarToggler';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { ColorModeSwitcher } from '../ColorModeSwitcher';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      padding=\"1rem\"\r\n    >\r\n      <Flex align=\"center\" mr={5}>\r\n        <SidebarToggler />\r\n        <Heading as=\"h3\" size=\"md\" letterSpacing={'-.1rem'}>\r\n          BookShelf\r\n        </Heading>\r\n      </Flex>\r\n\r\n      <Flex alignItems=\"center\">\r\n        <Heading size=\"sm\" mr=\"2\">\r\n          Firas\r\n        </Heading>\r\n        <IconButton\r\n          size=\"md\"\r\n          fontSize=\"md\"\r\n          aria-label=\"Logout\"\r\n          variant=\"ghost\"\r\n          color=\"current\"\r\n          icon={<FiLogOut />}\r\n        />\r\n        <ColorModeSwitcher />\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\ColorModeSwitcher.js",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\SidebarToggler.jsx",["61","62"],"D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\HomePage.jsx",["63","64"],"import React from 'react';\r\nimport {\r\n  Box,\r\n  Image,\r\n  Heading,\r\n  Text,\r\n  SimpleGrid,\r\n  useColorModeValue,\r\n  IconButton,\r\n} from '@chakra-ui/react';\r\nimport { FiLogOut } from 'react-icons/fi';\r\n\r\nconst HomePage = () => {\r\n  const bg = useColorModeValue('gray.100', 'gray.700');\r\n  return (\r\n    <Box px=\"4\" py=\"2\">\r\n      <Heading as=\"h2\" size=\"lg\" mb=\"4\">\r\n        Your Books\r\n      </Heading>\r\n      <SimpleGrid minChildWidth=\"170px\" spacing=\"20px\">\r\n        <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n          <Image\r\n            roundedTop=\"md\"\r\n            boxSize=\"300px\"\r\n            objectFit=\"cover\"\r\n            src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n            alt=\"Gay Science\"\r\n          />\r\n          <Box padding=\"3\" marginTop=\"0.5\">\r\n            <Heading as=\"h4\" size=\"md\">\r\n              The Gay Science\r\n            </Heading>\r\n            <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n          </Box>\r\n        </Box>\r\n        <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n          <Image\r\n            roundedTop=\"md\"\r\n            boxSize=\"300px\"\r\n            objectFit=\"cover\"\r\n            src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n            alt=\"Gay Science\"\r\n          />\r\n          <Box padding=\"3\" marginTop=\"0.5\">\r\n            <Heading as=\"h4\" size=\"md\">\r\n              The Gay Science\r\n            </Heading>\r\n            <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n          </Box>\r\n        </Box>{' '}\r\n        <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n          <Image\r\n            roundedTop=\"md\"\r\n            boxSize=\"300px\"\r\n            objectFit=\"cover\"\r\n            src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n            alt=\"Gay Science\"\r\n          />\r\n          <Box padding=\"3\" marginTop=\"0.5\">\r\n            <Heading as=\"h4\" size=\"md\">\r\n              The Gay Science\r\n            </Heading>\r\n            <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n          </Box>\r\n        </Box>{' '}\r\n        <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n          <Image\r\n            roundedTop=\"md\"\r\n            boxSize=\"300px\"\r\n            objectFit=\"cover\"\r\n            src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n            alt=\"Gay Science\"\r\n          />\r\n          <Box padding=\"3\" marginTop=\"0.5\">\r\n            <Heading as=\"h4\" size=\"md\">\r\n              The Gay Science\r\n            </Heading>\r\n            <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n          </Box>\r\n        </Box>{' '}\r\n        <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n          <Image\r\n            roundedTop=\"md\"\r\n            boxSize=\"300px\"\r\n            objectFit=\"cover\"\r\n            src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n            alt=\"Gay Science\"\r\n          />\r\n          <Box padding=\"3\" marginTop=\"0.5\">\r\n            <Heading as=\"h4\" size=\"md\">\r\n              The Gay Science\r\n            </Heading>\r\n            <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n          </Box>\r\n        </Box>\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\SearchPage.jsx",["65"],"import React from 'react';\r\nimport {\r\n  Heading,\r\n  Text,\r\n  Box,\r\n  Flex,\r\n  InputGroup,\r\n  Input,\r\n  InputRightElement,\r\n  Button,\r\n  IconButton,\r\n} from '@chakra-ui/react';\r\nimport { BiSearchAlt } from 'react-icons/bi';\r\n\r\nconst SearchPage = () => {\r\n  return (\r\n    <Box px=\"4\" py=\"2\" textAlign=\"center\">\r\n      <Flex flexDirection=\"column\" alignItems=\"center\">\r\n        <Heading as=\"h2\" size=\"lg\" mb=\"4\" mt=\"20\">\r\n          Search for your next book\r\n        </Heading>\r\n        <Text maxW=\"350px\" textAlign=\"center\" mt=\"-7px\">\r\n          Search the world's most comprehensive index of full-text books\r\n          provided by Google Books API.\r\n        </Text>\r\n        <InputGroup size=\"lg\" maxW=\"380px\" mt=\"20px\">\r\n          <Input type=\"bookSearch\" placeholder=\"Book name...\" />\r\n          <InputRightElement width=\"4.5rem\" mr=\"-11px\">\r\n            <IconButton\r\n              borderBottomLeftRadius=\"0\"\r\n              borderTopLeftRadius=\"0\"\r\n              size=\"lg\"\r\n              fontSize=\"2xl\"\r\n              aria-label=\"Logout\"\r\n              colorScheme=\"green\"\r\n              color=\"current\"\r\n              icon={<BiSearchAlt />}\r\n            />\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\LoginPage.jsx",["66"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Icon,\r\n} from '@chakra-ui/react';\r\nimport ErrorMessage from '../ui/ErrorMessage';\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //await userLogin({ email, password });\r\n      setIsLoggedIn(true);\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n    } catch (error) {\r\n      setError('Invalid username or password');\r\n      setIsLoading(false);\r\n      setEmail('');\r\n      setPassword('');\r\n      setShowPassword(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" mt=\"80px\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        {isLoggedIn ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>{email} logged in!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsLoggedIn(false)}\r\n            >\r\n              Sign out\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\">\r\n              <Heading>Login</Heading>\r\n            </Box>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl isRequired>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"test@test.com\"\r\n                    size=\"lg\"\r\n                    onChange={event => setEmail(event.currentTarget.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <Button\r\n                  variantColor=\"teal\"\r\n                  variant=\"outline\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Sign In'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\ErrorMessage.jsx",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\SignupPage.jsx",["67"],"import React, { useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Icon,\r\n} from '@chakra-ui/react';\r\nimport ErrorMessage from '../ui/ErrorMessage';\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      //await userLogin({ email, password });\r\n      setIsLoggedIn(true);\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n    } catch (error) {\r\n      setError('Invalid username or password');\r\n      setIsLoading(false);\r\n      setEmail('');\r\n      setPassword('');\r\n      setShowPassword(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" mt=\"80px\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        {isLoggedIn ? (\r\n          <Box textAlign=\"center\">\r\n            <Text>{email} logged in!</Text>\r\n            <Button\r\n              variantColor=\"orange\"\r\n              variant=\"outline\"\r\n              width=\"full\"\r\n              mt={4}\r\n              onClick={() => setIsLoggedIn(false)}\r\n            >\r\n              Sign out\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box textAlign=\"center\">\r\n              <Heading>Sign Up</Heading>\r\n            </Box>\r\n            <Box my={4} textAlign=\"left\">\r\n              <form onSubmit={handleSubmit}>\r\n                {error && <ErrorMessage message={error} />}\r\n                <FormControl isRequired>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"test@test.com\"\r\n                    size=\"lg\"\r\n                    onChange={event => setEmail(event.currentTarget.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Password</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <FormControl isRequired mt={6}>\r\n                  <FormLabel>Password Confirm</FormLabel>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type={showPassword ? 'text' : 'password'}\r\n                      placeholder=\"*******\"\r\n                      size=\"lg\"\r\n                      onChange={event => setPassword(event.currentTarget.value)}\r\n                    />\r\n                    <InputRightElement width=\"3rem\">\r\n                      <Button\r\n                        h=\"1.5rem\"\r\n                        size=\"sm\"\r\n                        onClick={handlePasswordVisibility}\r\n                      >\r\n                        {showPassword ? (\r\n                          <Icon name=\"view-off\" />\r\n                        ) : (\r\n                          <Icon name=\"view\" />\r\n                        )}\r\n                      </Button>\r\n                    </InputRightElement>\r\n                  </InputGroup>\r\n                </FormControl>\r\n                <Button\r\n                  variantColor=\"teal\"\r\n                  variant=\"outline\"\r\n                  type=\"submit\"\r\n                  width=\"full\"\r\n                  mt={4}\r\n                >\r\n                  {isLoading ? (\r\n                    <CircularProgress\r\n                      isIndeterminate\r\n                      size=\"24px\"\r\n                      color=\"teal\"\r\n                    />\r\n                  ) : (\r\n                    'Sign In'\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\BookPage.jsx",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\BooksPage.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":50,"nodeType":"74","messageId":"75","endLine":4,"endColumn":54},{"ruleId":"72","severity":1,"message":"76","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"77","line":2,"column":15,"nodeType":"74","messageId":"75","endLine":2,"endColumn":19},{"ruleId":"72","severity":1,"message":"77","line":9,"column":3,"nodeType":"74","messageId":"75","endLine":9,"endColumn":7},{"ruleId":"72","severity":1,"message":"78","line":18,"column":27,"nodeType":"74","messageId":"75","endLine":18,"endColumn":33},{"ruleId":"72","severity":1,"message":"79","line":9,"column":3,"nodeType":"74","messageId":"75","endLine":9,"endColumn":13},{"ruleId":"72","severity":1,"message":"80","line":11,"column":10,"nodeType":"74","messageId":"75","endLine":11,"endColumn":18},{"ruleId":"72","severity":1,"message":"81","line":10,"column":3,"nodeType":"74","messageId":"75","endLine":10,"endColumn":9},{"ruleId":"72","severity":1,"message":"82","line":20,"column":10,"nodeType":"74","messageId":"75","endLine":20,"endColumn":18},{"ruleId":"72","severity":1,"message":"82","line":20,"column":10,"nodeType":"74","messageId":"75","endLine":20,"endColumn":18},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Text' is defined but never used.","'Router' is defined but never used.","'IconButton' is defined but never used.","'FiLogOut' is defined but never used.","'Button' is defined but never used.","'password' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]