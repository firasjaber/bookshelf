[{"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/index.js":"1","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/App.js":"2","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/utils/setAuthToken.js":"3","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/AuthContext/AuthState.js":"4","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/SearchPage.jsx":"5","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/LoginPage.jsx":"6","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/SignupPage.jsx":"7","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/BookPage.jsx":"8","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/HomePage.jsx":"9","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/BooksPage.jsx":"10","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/ProtectedRoute.jsx":"11","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/AuthContext/authReducer.js":"12","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/configs/config.js":"13","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/types.js":"14","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/BookCard.jsx":"15","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/Header.jsx":"16","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/ErrorMessage.jsx":"17","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/Footer.jsx":"18","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ColorModeSwitcher.js":"19","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/SidebarToggler.jsx":"20","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/BooksContext/BooksState.js":"21","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/BooksContext/booksReducer.js":"22","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/utils/formatBookData.js":"23"},{"size":277,"mtime":1611324576924,"results":"24","hashOfConfig":"25"},{"size":1661,"mtime":1612701530685,"results":"26","hashOfConfig":"25"},{"size":234,"mtime":1611324576925,"results":"27","hashOfConfig":"25"},{"size":2686,"mtime":1612700619541,"results":"28","hashOfConfig":"25"},{"size":5008,"mtime":1612700487810,"results":"29","hashOfConfig":"25"},{"size":3873,"mtime":1612700487809,"results":"30","hashOfConfig":"25"},{"size":4944,"mtime":1612700487810,"results":"31","hashOfConfig":"25"},{"size":3505,"mtime":1612704439595,"results":"32","hashOfConfig":"25"},{"size":3662,"mtime":1611324576925,"results":"33","hashOfConfig":"25"},{"size":443,"mtime":1612716939825,"results":"34","hashOfConfig":"25"},{"size":588,"mtime":1611324576925,"results":"35","hashOfConfig":"25"},{"size":910,"mtime":1612700613325,"results":"36","hashOfConfig":"25"},{"size":55,"mtime":1611324576924,"results":"37","hashOfConfig":"25"},{"size":547,"mtime":1612701099891,"results":"38","hashOfConfig":"25"},{"size":1477,"mtime":1611324576925,"results":"39","hashOfConfig":"25"},{"size":959,"mtime":1611324576925,"results":"40","hashOfConfig":"25"},{"size":340,"mtime":1611324576925,"results":"41","hashOfConfig":"25"},{"size":267,"mtime":1611324576925,"results":"42","hashOfConfig":"25"},{"size":596,"mtime":1611324576924,"results":"43","hashOfConfig":"25"},{"size":2274,"mtime":1611324576925,"results":"44","hashOfConfig":"25"},{"size":1789,"mtime":1612717016929,"results":"45","hashOfConfig":"25"},{"size":570,"mtime":1612715817968,"results":"46","hashOfConfig":"25"},{"size":473,"mtime":1612704591327,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"13buhyz",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/index.js",[],["107","108"],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/App.js",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/utils/setAuthToken.js",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/AuthContext/AuthState.js",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/SearchPage.jsx",["109"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport {\n  Heading,\n  Text,\n  Box,\n  Flex,\n  InputGroup,\n  Input,\n  InputRightElement,\n  FormControl,\n  SimpleGrid,\n  IconButton,\n  Button,\n  FormErrorMessage,\n  Spinner,\n} from '@chakra-ui/react';\nimport Header from './../ui/Header';\n\nimport { BiSearchAlt } from 'react-icons/bi';\nimport BookCard from '../ui/BookCard';\n\nconst SearchPage = () => {\n  const [bookQuery, setBookQuery] = useState('');\n  const [books, setBooks] = useState([]);\n  const [totalItems, setTotalItems] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [searchLoading, setSearchLoading] = useState(false);\n  const [moreLoading, setMoreLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const axiosInstance = axios.create();\n  delete axiosInstance.defaults.headers.authorization;\n  const onChange = e => setBookQuery(e.target.value);\n  const submitHandler = e => {\n    e.preventDefault();\n    getData();\n  };\n  const getData = async () => {\n    if (!bookQuery) {\n      setSearchLoading(false);\n      setErrorMessage('Please enter a valid name');\n      setTimeout(() => {\n        setErrorMessage('');\n      }, 3000);\n    } else {\n      setSearchLoading(true);\n      const URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n      const MAX_ITEMS = '&maxResults=9';\n      try {\n        const res = await axiosInstance.get(URL + bookQuery + MAX_ITEMS);\n        setBooks(res.data.items);\n        setTotalItems(res.data.totalItems);\n        setSearchLoading(false);\n      } catch (error) {\n        setSearchLoading(false);\n        setErrorMessage(error.message);\n        setTimeout(() => {\n          setErrorMessage('');\n        }, 3000);\n      }\n    }\n  };\n  const getMore = async () => {\n    setMoreLoading(true);\n    const URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n    const MAX_ITEMS = '&maxResults=9';\n    const START_INDEX = '&startIndex=' + books.length;\n    const res = await axiosInstance.get(\n      URL + bookQuery + START_INDEX + MAX_ITEMS\n    );\n    if (!res.data.items) {\n      setHasMore(false);\n    } else {\n      setBooks([...books, ...res.data.items]);\n    }\n    setMoreLoading(false);\n  };\n\n  return (\n    <>\n      <Header />\n      <Box px=\"4\" py=\"2\" textAlign=\"center\">\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n          <Heading as=\"h2\" size=\"lg\" mb=\"4\" mt=\"20\">\n            Search for your next book\n          </Heading>\n          <Text maxW=\"350px\" textAlign=\"center\" mt=\"-7px\">\n            Search the world's most comprehensive index of full-text books\n            provided by Google Books API.\n          </Text>\n          <FormControl\n            as=\"form\"\n            onSubmit={submitHandler}\n            width=\"300px\"\n            isInvalid={errorMessage}\n          >\n            <InputGroup size=\"lg\" w=\"100%\" maxW=\"380px\" mt=\"20px\">\n              <Input\n                type=\"text\"\n                name=\"bookQuery\"\n                placeholder=\"Book name...\"\n                value={bookQuery}\n                onChange={onChange}\n              />\n              <InputRightElement width=\"4.5rem\" mr=\"-11px\">\n                <IconButton\n                  type=\"submit\"\n                  borderBottomLeftRadius=\"0\"\n                  borderTopLeftRadius=\"0\"\n                  size=\"lg\"\n                  fontSize=\"2xl\"\n                  aria-label=\"Logout\"\n                  colorScheme=\"green\"\n                  color=\"current\"\n                  icon={<BiSearchAlt />}\n                />\n              </InputRightElement>\n            </InputGroup>\n            {errorMessage && (\n              <Text\n                mt=\"5px\"\n                fontweigh=\"500\"\n                color=\"tomato\"\n                textAlign=\"left\"\n                pl=\"10px\"\n              >\n                {errorMessage}\n              </Text>\n            )}\n          </FormControl>\n        </Flex>\n        {searchLoading ? (\n          <Spinner mt=\"40px\" textAlign=\"center\" size=\"xl\" />\n        ) : (\n          books &&\n          books.length !== 0 && (\n            <Box>\n              <Heading\n                as=\"h4\"\n                size=\"sm\"\n                fontWeight=\"600\"\n                textAlign=\"left\"\n                mt=\"30px\"\n              >\n                Search Results :\n              </Heading>\n              <SimpleGrid minChildWidth=\"170px\" spacing=\"20px\" mt=\"20px\">\n                {books &&\n                  books.map(book => <BookCard key={book.id} book={book} />)}\n              </SimpleGrid>\n              {totalItems > books.length && hasMore && (\n                <Button isLoading={moreLoading} my=\"20px\" onClick={getMore}>\n                  Show More\n                </Button>\n              )}\n              {!hasMore && (\n                <Text textAlign=\"center\" my=\"20px\">\n                  Oops , no more results...\n                </Text>\n              )}\n            </Box>\n          )\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default SearchPage;\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/LoginPage.jsx",["110"],"import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  Text,\n  InputGroup,\n  InputRightElement,\n  Icon,\n  Link,\n} from '@chakra-ui/react';\nimport ErrorMessage from '../ui/ErrorMessage';\nimport { AuthContext } from './../contexts/AuthContext/AuthState';\nimport { Link as NavLink, Redirect } from 'react-router-dom';\n\nexport default function Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const { login, loadUser, token, error, user } = useContext(AuthContext);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    await login({ username, password });\n  };\n  useEffect(() => {\n    if (token) {\n      loadUser();\n    }\n  }, []);\n  useEffect(() => {\n    if (error) {\n      setIsLoading(false);\n      setShowPassword(false);\n    }\n  }, [error]);\n\n  const handleDemo = () => {\n    setUsername('demo');\n    setPassword('123456');\n  };\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n  if (user) return <Redirect to=\"/\" />;\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" mt=\"80px\">\n      <Box\n        p={8}\n        maxWidth=\"500px\"\n        borderWidth={1}\n        borderRadius={8}\n        boxShadow=\"lg\"\n      >\n        <Box textAlign=\"center\">\n          <Heading size=\"md\">Login</Heading>\n        </Box>\n        <Box mt={4} mb={1} textAlign=\"left\">\n          <form onSubmit={handleSubmit}>\n            {error && <ErrorMessage message={error} />}\n            <FormControl isRequired>\n              <FormLabel>Username</FormLabel>\n              <Input\n                type=\"text\"\n                placeholder=\"test\"\n                size=\"lg\"\n                value={username}\n                onChange={event => setUsername(event.currentTarget.value)}\n              />\n            </FormControl>\n            <FormControl isRequired mt={6}>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"*******\"\n                  size=\"lg\"\n                  value={password}\n                  onChange={event => setPassword(event.currentTarget.value)}\n                />\n                <InputRightElement width=\"3rem\">\n                  <Button\n                    h=\"1.5rem\"\n                    size=\"sm\"\n                    onClick={handlePasswordVisibility}\n                  >\n                    {showPassword ? (\n                      <Icon name=\"view-off\" />\n                    ) : (\n                      <Icon name=\"view\" />\n                    )}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Button\n              variantColor=\"teal\"\n              variant=\"outline\"\n              type=\"submit\"\n              width=\"full\"\n              mt={4}\n            >\n              {isLoading ? (\n                <CircularProgress isIndeterminate size=\"24px\" color=\"teal\" />\n              ) : (\n                'Sign In'\n              )}\n            </Button>\n          </form>\n          <Text mt=\"20px\" textAlign=\"center\" fontSize=\"sm\">\n            Dont have an account?\n            <br />\n            <Link\n              as={NavLink}\n              to=\"/signup\"\n              _hover={{ textDecoration: 'underline' }}\n            >\n              signup here{' '}\n            </Link>\n            or{' '}\n            <Link _hover={{ textDecoration: 'underline' }} onClick={handleDemo}>\n              use demo\n            </Link>\n          </Text>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/SignupPage.jsx",["111","112","113"],"import React, { useState, useContext, useEffect } from 'react';\nimport {\n  Flex,\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  CircularProgress,\n  Text,\n  InputGroup,\n  InputRightElement,\n  Link,\n  Icon,\n} from '@chakra-ui/react';\nimport ErrorMessage from '../ui/ErrorMessage';\nimport { Link as NavLink, Redirect } from 'react-router-dom';\nimport { AuthContext } from './../contexts/AuthContext/AuthState';\n\nexport default function Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const { register, loadUser, token, error, user } = useContext(AuthContext);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (confirmPassword !== password) {\n      console.log('error');\n    } else {\n      console.log(username, password);\n      setIsLoading(true);\n      await register({ username, password });\n    }\n  };\n  useEffect(() => {\n    if (token) {\n      loadUser();\n    }\n  }, []);\n  useEffect(() => {\n    if (error) {\n      setIsLoading(false);\n      setShowPassword(false);\n    }\n  }, [error]);\n\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n  if (user) return <Redirect to=\"/\" />;\n\n  return (\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" mt=\"80px\">\n      <Box\n        p={8}\n        maxWidth=\"500px\"\n        borderWidth={1}\n        borderRadius={8}\n        boxShadow=\"lg\"\n      >\n        <>\n          <Box textAlign=\"center\">\n            <Heading>Sign Up</Heading>\n          </Box>\n          <Box mt={4} mb={2} textAlign=\"left\">\n            <form onSubmit={handleSubmit}>\n              {error && <ErrorMessage message={error} />}\n              <FormControl isRequired>\n                <FormLabel>Username</FormLabel>\n                <Input\n                  type=\"text\"\n                  placeholder=\"username\"\n                  size=\"lg\"\n                  onChange={event => setUsername(event.currentTarget.value)}\n                />\n              </FormControl>\n              <FormControl isRequired mt={6}>\n                <FormLabel>Password</FormLabel>\n                <InputGroup>\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"*******\"\n                    size=\"lg\"\n                    onChange={event => setPassword(event.currentTarget.value)}\n                  />\n                  <InputRightElement width=\"3rem\">\n                    <Button\n                      h=\"1.5rem\"\n                      size=\"sm\"\n                      onClick={handlePasswordVisibility}\n                    >\n                      {showPassword ? (\n                        <Icon name=\"view-off\" />\n                      ) : (\n                        <Icon name=\"view\" />\n                      )}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <FormControl isRequired mt={6}>\n                <FormLabel>Confirm Password</FormLabel>\n                <InputGroup>\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"*******\"\n                    size=\"lg\"\n                    onChange={event =>\n                      setConfirmPassword(event.currentTarget.value)\n                    }\n                  />\n                  <InputRightElement width=\"3rem\">\n                    <Button\n                      h=\"1.5rem\"\n                      size=\"sm\"\n                      onClick={handlePasswordVisibility}\n                    >\n                      {showPassword ? (\n                        <Icon name=\"view-off\" />\n                      ) : (\n                        <Icon name=\"view\" />\n                      )}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Button\n                variantColor=\"teal\"\n                variant=\"outline\"\n                type=\"submit\"\n                width=\"full\"\n                mt={4}\n              >\n                {isLoading ? (\n                  <CircularProgress isIndeterminate size=\"24px\" color=\"teal\" />\n                ) : (\n                  'Sign In'\n                )}\n              </Button>\n            </form>\n            <Text mt=\"20px\" mr=\"3px\" fontSize=\"sm\" textAlign=\"center\">\n              Already have an account?{' '}\n              <Link\n                as={NavLink}\n                to=\"/login\"\n                _hover={{ textDecoration: 'underline' }}\n              >\n                login here\n              </Link>\n            </Text>\n          </Box>\n        </>\n      </Box>\n    </Flex>\n  );\n}\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/BookPage.jsx",["114","115"],"import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport {\n  Box,\n  Flex,\n  Heading,\n  Image,\n  Spinner,\n  Button,\n  Text,\n  Link,\n} from '@chakra-ui/react';\nimport Header from './../ui/Header';\nimport Footer from './../ui/Footer';\nimport { BooksContext } from './../contexts/BooksContext/BooksState';\nimport formatBookData from './../utils/formatBookData'\n\nconst BookPage = () => {\n  const [loading, setLoading] = useState(true);\n  const [bookData, setBookData] = useState({});\n  //loading current book\n  const axiosInstance = axios.create();\n  delete axiosInstance.defaults.headers.authorization;\n  const { bookId } = useParams();\n  useEffect(() => {\n    const getBookData = async () => {\n      const URL = 'https://www.googleapis.com/books/v1/volumes/';\n      const res = await axiosInstance.get(URL + bookId);\n      return res.data;\n    };\n    getBookData().then(data => setBookData(data.volumeInfo));\n    setLoading(false);\n  }, []);\n  // add book to the list handler \n  const { postBook } = useContext(BooksContext);\n  const handleAddBook = () => {\n    const book = formatBookData(bookData,bookId);\n    postBook(book);\n  };\n  if (!bookData.title) {\n    return (\n      <>\n        <Header />\n        <Flex direction=\"column\" alignItems=\"center\" justifyItems=\"center\">\n          <Box>\n            <Spinner display=\"block\" size=\"xl\" mt=\"40px\" />\n          </Box>\n        </Flex>\n        <Footer />\n      </>\n    );\n  }\n  if (bookData)\n    return (\n      <>\n        <Header />\n        <Box p=\"20px\">\n          <Flex>\n            <Box>\n              <Image src={bookData?.imageLinks?.thumbnail} />\n            </Box>\n            <Box pl=\"20px\">\n              <Heading as=\"h3\" size=\"lg\">\n                {bookData.title}\n              </Heading>\n              <Heading as=\"h4\" size=\"md\" opacity=\"0.5\">\n                {bookData.subtitle}\n              </Heading>\n              <Text mt=\"8px\" fontWeight=\"600\">\n                By {bookData.authors && bookData?.authors[0]}\n              </Text>\n              <Text mt=\"-3px\" opacity=\"0.5\">\n                Published at : {bookData?.publishedDate} , by{' '}\n                {bookData?.publisher}\n              </Text>\n              <Text mt=\"-3px\" opacity=\"0.5\">\n                Catagories :{' '}\n                {bookData.categories &&\n                  bookData.categories.map((cat, ind) => {\n                    if (bookData?.categories[ind + 1]) return cat + ' ,';\n                    return cat;\n                  })}{' '}\n              </Text>\n              <Text mt=\"-3px\" opacity=\"0.5\">\n                Paperback. {bookData.pageCount} pages.\n              </Text>\n              <Flex mt=\"10px\" alignItems=\"center\">\n                <Button\n                  size=\"sm\"\n                  mr=\"10px\"\n                  variant=\"outline\"\n                  onClick={handleAddBook}\n                >\n                  Add to your list\n                </Button>\n                <Link ml=\"10px\" href={bookData.previewLink} isExternal>\n                  <Text fontSize=\"sm\">Preview</Text>\n                </Link>\n              </Flex>\n            </Box>\n          </Flex>\n          <Box mt=\"20px\">\n            <Heading as=\"h4\" size=\"sm\" fontWeight=\"500\" opacity=\"0.5\">\n              Description :\n            </Heading>\n            <Text mt=\"10px\">{bookData.description}</Text>\n          </Box>\n        </Box>\n        <Footer />\n      </>\n    );\n};\n\nexport default BookPage;\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/HomePage.jsx",["116","117"],"import React from 'react';\nimport {\n  Box,\n  Image,\n  Heading,\n  Text,\n  SimpleGrid,\n  useColorModeValue,\n  IconButton,\n} from '@chakra-ui/react';\nimport { FiLogOut } from 'react-icons/fi';\nimport Header from './../ui/Header';\nimport Footer from './../ui/Footer';\n\nconst HomePage = () => {\n  const bg = useColorModeValue('gray.100', 'gray.700');\n  return (\n    <>\n      <Header />\n      <Box px=\"4\" py=\"2\">\n        <Heading as=\"h2\" size=\"lg\" mb=\"4\">\n          Your Books\n        </Heading>\n        <SimpleGrid minChildWidth=\"170px\" spacing=\"20px\">\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\n            <Image\n              roundedTop=\"md\"\n              boxSize=\"300px\"\n              objectFit=\"cover\"\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\n              alt=\"Gay Science\"\n            />\n            <Box padding=\"3\" marginTop=\"0.5\">\n              <Heading as=\"h4\" size=\"md\">\n                The Gay Science\n              </Heading>\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\n            </Box>\n          </Box>\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\n            <Image\n              roundedTop=\"md\"\n              boxSize=\"300px\"\n              objectFit=\"cover\"\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\n              alt=\"Gay Science\"\n            />\n            <Box padding=\"3\" marginTop=\"0.5\">\n              <Heading as=\"h4\" size=\"md\">\n                The Gay Science\n              </Heading>\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\n            </Box>\n          </Box>{' '}\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\n            <Image\n              roundedTop=\"md\"\n              boxSize=\"300px\"\n              objectFit=\"cover\"\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\n              alt=\"Gay Science\"\n            />\n            <Box padding=\"3\" marginTop=\"0.5\">\n              <Heading as=\"h4\" size=\"md\">\n                The Gay Science\n              </Heading>\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\n            </Box>\n          </Box>{' '}\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\n            <Image\n              roundedTop=\"md\"\n              boxSize=\"300px\"\n              objectFit=\"cover\"\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\n              alt=\"Gay Science\"\n            />\n            <Box padding=\"3\" marginTop=\"0.5\">\n              <Heading as=\"h4\" size=\"md\">\n                The Gay Science\n              </Heading>\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\n            </Box>\n          </Box>{' '}\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\n            <Image\n              roundedTop=\"md\"\n              boxSize=\"300px\"\n              objectFit=\"cover\"\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\n              alt=\"Gay Science\"\n            />\n            <Box padding=\"3\" marginTop=\"0.5\">\n              <Heading as=\"h4\" size=\"md\">\n                The Gay Science\n              </Heading>\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\n            </Box>\n          </Box>\n        </SimpleGrid>\n      </Box>\n      <Footer />\n    </>\n  );\n};\n\nexport default HomePage;\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/BooksPage.jsx",["118"],"import React, {useContext, useEffect} from 'react';\nimport Header from './../ui/Header';\nimport Footer from './../ui/Footer';\nimport {BooksContext} from './../contexts/BooksContext/BooksState';\n\nconst BooksPage = () => {\n  const { getAllBooks } = useContext(BooksContext);\n  useEffect(() => {\n    getAllBooks();\n  }, [])\n  return (\n    <>\n      <Header />\n      <div>my books </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default BooksPage;\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/pages/ProtectedRoute.jsx",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/AuthContext/authReducer.js",["119"],"import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGOUT,\n  REGISTER_FAIL,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        token: action.payload.token,\n        user: action.payload.user,\n        isAuthenticated: true,\n        loading: true,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/configs/config.js",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/types.js",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/BookCard.jsx",["120"],"import React from 'react';\nimport {\n  Image,\n  Heading,\n  Text,\n  Box,\n  useColorModeValue,\n  Tooltip,\n  Link,\n  Flex,\n  HStack,\n} from '@chakra-ui/react';\nimport { NavLink } from 'react-router-dom';\nimport { ArrowRightIcon } from '@chakra-ui/icons';\n\nconst BookCard = ({ book }) => {\n  const {\n    volumeInfo: { authors, imageLinks, title },\n    id,\n  } = book;\n  const bg = useColorModeValue('gray.100', 'gray.700');\n  return (\n    <Box w=\"100%\" bg={bg} rounded=\"md\" boxShadow=\"base\">\n      <Image\n        roundedTop=\"md\"\n        boxSize=\"300px\"\n        objectFit=\"cover\"\n        src={imageLinks && imageLinks.thumbnail}\n        alt={title}\n      />\n      <Box padding=\"3\" marginTop=\"0.5\">\n        <Tooltip label={title} aria-label=\"book title\">\n          <Heading as=\"h4\" size=\"md\" noOfLines=\"2\" alt={title}>\n            {title}\n          </Heading>\n        </Tooltip>\n        <Text size=\"sm\" noOfLines=\"1\">\n          {authors && authors[0]}\n        </Text>\n        <Link\n          as={NavLink}\n          to={`/book/${id}`}\n          _hover={{ fontWeight: '500', textDecoration: 'underline' }}\n        >\n          <HStack\n            pt=\"5px\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            spacing=\"5px\"\n          >\n            <Box mt=\"-2px\" fontWeight=\"600\">\n              More\n            </Box>{' '}\n            <ArrowRightIcon w={3} h={3} />\n          </HStack>\n        </Link>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BookCard;\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/Header.jsx",["121","122"],"import React from 'react';\nimport { Box, Text, Flex, Heading, IconButton } from '@chakra-ui/react';\nimport SidebarToggler from './SidebarToggler';\nimport { FiLogOut } from 'react-icons/fi';\nimport { ColorModeSwitcher } from '../ColorModeSwitcher';\n\nconst Header = () => {\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding=\"1rem\"\n    >\n      <Flex align=\"center\" mr={5}>\n        <SidebarToggler />\n        <Heading as=\"h3\" size=\"md\" letterSpacing={'-.1rem'}>\n          BookShelf\n        </Heading>\n      </Flex>\n\n      <Flex alignItems=\"center\">\n        <Heading size=\"sm\" mr=\"2\">\n          Firas\n        </Heading>\n        <IconButton\n          size=\"md\"\n          fontSize=\"md\"\n          aria-label=\"Logout\"\n          variant=\"ghost\"\n          color=\"current\"\n          icon={<FiLogOut />}\n        />\n        <ColorModeSwitcher />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Header;\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/ErrorMessage.jsx",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/Footer.jsx",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ColorModeSwitcher.js",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/ui/SidebarToggler.jsx",["123"],"import React, { useContext, useRef } from 'react';\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerBody,\n  Text,\n  Box,\n  useDisclosure,\n  List,\n  Link,\n  ListItem,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { AiOutlineMenu } from 'react-icons/ai';\nimport { Link as NavLink } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext/AuthState';\n\nfunction SidebarToggler() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = useRef();\n\n  return (\n    <>\n      <Box mr=\"3\">\n        <AiOutlineMenu ref={btnRef} onClick={onOpen} />\n      </Box>\n      <Drawer\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <Menu onClose={onClose} />\n      </Drawer>\n    </>\n  );\n}\n\nconst Menu = ({ onClose }) => {\n  const { logout } = useContext(AuthContext);\n  const links = [\n    { ind: 0, pathName: 'Home', pathLink: '/' },\n    { ind: 1, pathName: 'Search', pathLink: '/search' },\n    { ind: 2, pathName: 'My Books', pathLink: '/books' },\n    { ind: 3, pathName: 'Logout', pathLink: '/' },\n  ];\n  return (\n    <DrawerOverlay>\n      <DrawerContent>\n        <DrawerCloseButton />\n        <DrawerHeader>Menu</DrawerHeader>\n        <DrawerBody>\n          <List>\n            {links.map(({ ind, pathName, pathLink }) => (\n              <MenuItem\n                key={ind}\n                pathName={pathName}\n                pathLink={pathLink}\n                onClose={onClose}\n                logout={logout}\n              />\n            ))}\n          </List>\n        </DrawerBody>\n      </DrawerContent>\n    </DrawerOverlay>\n  );\n};\n\nconst MenuItem = ({ pathName, pathLink, onClose, logout }) => {\n  const mode = useColorModeValue('dark', 'light');\n  const color = mode === 'dark' ? 'gray.200' : 'gray.800';\n  return (\n    <ListItem\n      px=\"4\"\n      py=\"2\"\n      _hover={{\n        backgroundColor: color,\n        transition: '0.3s ease all',\n      }}\n    >\n      <Link\n        fontWeight=\"500\"\n        width=\"100%\"\n        as={NavLink}\n        to={pathLink}\n        onClick={pathName === 'Logout' ? logout : onClose}\n      >\n        {pathName}\n      </Link>\n    </ListItem>\n  );\n};\n\nexport default SidebarToggler;\n",["124","125"],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/BooksContext/BooksState.js",[],"/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/contexts/BooksContext/booksReducer.js",["126"],"import { GET_BOOKS, POST_BOOK, BOOKS_ERROR, CLEAR_BOOKS_ERROR } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_BOOKS:\n      return {\n        ...state,\n        books: action.payload,\n      };\n    case POST_BOOK: \n      return {\n        ...state,\n        books : [action.payload,...state.books]\n      }\n    case BOOKS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case CLEAR_BOOKS_ERROR:\n      return {\n        ...state,\n        error: '',\n      };\n    default:\n      return state;\n  }\n};\n","/Users/firasjaber/Desktop/Workspaces/bookshelf/web/src/utils/formatBookData.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":15,"column":3,"nodeType":"133","messageId":"134","endLine":15,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":37,"column":6,"nodeType":"137","endLine":37,"endColumn":8,"suggestions":"138"},{"ruleId":"131","severity":1,"message":"139","line":26,"column":10,"nodeType":"133","messageId":"134","endLine":26,"endColumn":20},{"ruleId":"131","severity":1,"message":"140","line":26,"column":22,"nodeType":"133","messageId":"134","endLine":26,"endColumn":35},{"ruleId":"135","severity":1,"message":"136","line":44,"column":6,"nodeType":"137","endLine":44,"endColumn":8,"suggestions":"141"},{"ruleId":"131","severity":1,"message":"142","line":20,"column":10,"nodeType":"133","messageId":"134","endLine":20,"endColumn":17},{"ruleId":"135","severity":1,"message":"143","line":34,"column":6,"nodeType":"137","endLine":34,"endColumn":8,"suggestions":"144"},{"ruleId":"131","severity":1,"message":"145","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":13},{"ruleId":"131","severity":1,"message":"146","line":11,"column":10,"nodeType":"133","messageId":"134","endLine":11,"endColumn":18},{"ruleId":"135","severity":1,"message":"147","line":10,"column":6,"nodeType":"137","endLine":10,"endColumn":8,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":10,"column":1,"nodeType":"151","endLine":44,"endColumn":3},{"ruleId":"131","severity":1,"message":"152","line":10,"column":3,"nodeType":"133","messageId":"134","endLine":10,"endColumn":7},{"ruleId":"131","severity":1,"message":"153","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"154","line":2,"column":15,"nodeType":"133","messageId":"134","endLine":2,"endColumn":19},{"ruleId":"131","severity":1,"message":"154","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":7},{"ruleId":"127","replacedBy":"155"},{"ruleId":"129","replacedBy":"156"},{"ruleId":"149","severity":1,"message":"150","line":3,"column":1,"nodeType":"151","endLine":28,"endColumn":3},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'FormErrorMessage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadUser' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["159"],"'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.",["160"],"'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosInstance' and 'bookId'. Either include them or remove the dependency array.",["161"],"'IconButton' is defined but never used.","'FiLogOut' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllBooks'. Either include it or remove the dependency array.",["162"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Flex' is defined but never used.","'Box' is defined but never used.","'Text' is defined but never used.",["157"],["158"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [loadUser, token]",{"range":"170","text":"171"},{"range":"172","text":"171"},"Update the dependencies array to be: [axiosInstance, bookId]",{"range":"173","text":"174"},"Update the dependencies array to be: [getAllBooks]",{"range":"175","text":"176"},[951,953],"[loadUser, token]",[1204,1206],[1021,1023],"[axiosInstance, bookId]",[317,319],"[getAllBooks]"]