[{"D:\\firas\\workspaces\\bookshelf\\web\\src\\index.js":"1","D:\\firas\\workspaces\\bookshelf\\web\\src\\App.js":"2","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\Header.jsx":"3","D:\\firas\\workspaces\\bookshelf\\web\\src\\ColorModeSwitcher.js":"4","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\SidebarToggler.jsx":"5","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\HomePage.jsx":"6","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\SearchPage.jsx":"7","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\LoginPage.jsx":"8","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\ErrorMessage.jsx":"9","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\SignupPage.jsx":"10","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\BookPage.jsx":"11","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\BooksPage.jsx":"12","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\BookCard.jsx":"13","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\Footer.jsx":"14","D:\\firas\\workspaces\\bookshelf\\web\\src\\utils\\setAuthToken.js":"15","D:\\firas\\workspaces\\bookshelf\\web\\src\\contexts\\AuthContext\\AuthState.js":"16","D:\\firas\\workspaces\\bookshelf\\web\\src\\contexts\\AuthContext\\authReducer.js":"17","D:\\firas\\workspaces\\bookshelf\\web\\src\\contexts\\types.js":"18","D:\\firas\\workspaces\\bookshelf\\web\\src\\configs\\config.js":"19","D:\\firas\\workspaces\\bookshelf\\web\\src\\hooks\\useAuthContext.js":"20","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\ProtectedRoute.jsx":"21"},{"size":289,"mtime":1610185912889,"results":"22","hashOfConfig":"23"},{"size":1573,"mtime":1611495667961,"results":"24","hashOfConfig":"23"},{"size":1000,"mtime":1610185912890,"results":"25","hashOfConfig":"23"},{"size":618,"mtime":1610185912888,"results":"26","hashOfConfig":"23"},{"size":2372,"mtime":1611007325196,"results":"27","hashOfConfig":"23"},{"size":3769,"mtime":1611006925889,"results":"28","hashOfConfig":"23"},{"size":5177,"mtime":1611495548059,"results":"29","hashOfConfig":"23"},{"size":4008,"mtime":1611488985889,"results":"30","hashOfConfig":"23"},{"size":353,"mtime":1610189390468,"results":"31","hashOfConfig":"23"},{"size":5103,"mtime":1611488898002,"results":"32","hashOfConfig":"23"},{"size":3164,"mtime":1611495601973,"results":"33","hashOfConfig":"23"},{"size":265,"mtime":1611006907664,"results":"34","hashOfConfig":"23"},{"size":1539,"mtime":1610970431714,"results":"35","hashOfConfig":"23"},{"size":282,"mtime":1610970596101,"results":"36","hashOfConfig":"23"},{"size":245,"mtime":1610988067062,"results":"37","hashOfConfig":"23"},{"size":2812,"mtime":1611487393930,"results":"38","hashOfConfig":"23"},{"size":954,"mtime":1611487463692,"results":"39","hashOfConfig":"23"},{"size":367,"mtime":1611487367624,"results":"40","hashOfConfig":"23"},{"size":56,"mtime":1610995389339,"results":"41","hashOfConfig":"23"},{"size":192,"mtime":1610994237638,"results":"42","hashOfConfig":"23"},{"size":612,"mtime":1611007015021,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"wbh7gz",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\firas\\workspaces\\bookshelf\\web\\src\\index.js",[],["97","98"],"D:\\firas\\workspaces\\bookshelf\\web\\src\\App.js",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\Header.jsx",["99","100"],"import React from 'react';\r\nimport { Box, Text, Flex, Heading, IconButton } from '@chakra-ui/react';\r\nimport SidebarToggler from './SidebarToggler';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { ColorModeSwitcher } from '../ColorModeSwitcher';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      padding=\"1rem\"\r\n    >\r\n      <Flex align=\"center\" mr={5}>\r\n        <SidebarToggler />\r\n        <Heading as=\"h3\" size=\"md\" letterSpacing={'-.1rem'}>\r\n          BookShelf\r\n        </Heading>\r\n      </Flex>\r\n\r\n      <Flex alignItems=\"center\">\r\n        <Heading size=\"sm\" mr=\"2\">\r\n          Firas\r\n        </Heading>\r\n        <IconButton\r\n          size=\"md\"\r\n          fontSize=\"md\"\r\n          aria-label=\"Logout\"\r\n          variant=\"ghost\"\r\n          color=\"current\"\r\n          icon={<FiLogOut />}\r\n        />\r\n        <ColorModeSwitcher />\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\ColorModeSwitcher.js",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\SidebarToggler.jsx",["101"],"import React, { useContext, useRef } from 'react';\r\nimport {\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  DrawerHeader,\r\n  DrawerBody,\r\n  Text,\r\n  Box,\r\n  useDisclosure,\r\n  List,\r\n  Link,\r\n  ListItem,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { AiOutlineMenu } from 'react-icons/ai';\r\nimport { Link as NavLink } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext/AuthState';\r\n\r\nfunction SidebarToggler() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = useRef();\r\n\r\n  return (\r\n    <>\r\n      <Box mr=\"3\">\r\n        <AiOutlineMenu ref={btnRef} onClick={onOpen} />\r\n      </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <Menu onClose={onClose} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Menu = ({ onClose }) => {\r\n  const { logout } = useContext(AuthContext);\r\n  const links = [\r\n    { ind: 0, pathName: 'Home', pathLink: '/' },\r\n    { ind: 1, pathName: 'Search', pathLink: '/search' },\r\n    { ind: 2, pathName: 'My Books', pathLink: '/books' },\r\n    { ind: 3, pathName: 'Logout', pathLink: '/' },\r\n  ];\r\n  return (\r\n    <DrawerOverlay>\r\n      <DrawerContent>\r\n        <DrawerCloseButton />\r\n        <DrawerHeader>Menu</DrawerHeader>\r\n        <DrawerBody>\r\n          <List>\r\n            {links.map(({ ind, pathName, pathLink }) => (\r\n              <MenuItem\r\n                key={ind}\r\n                pathName={pathName}\r\n                pathLink={pathLink}\r\n                onClose={onClose}\r\n                logout={logout}\r\n              />\r\n            ))}\r\n          </List>\r\n        </DrawerBody>\r\n      </DrawerContent>\r\n    </DrawerOverlay>\r\n  );\r\n};\r\n\r\nconst MenuItem = ({ pathName, pathLink, onClose, logout }) => {\r\n  const mode = useColorModeValue('dark', 'light');\r\n  const color = mode === 'dark' ? 'gray.200' : 'gray.800';\r\n  return (\r\n    <ListItem\r\n      px=\"4\"\r\n      py=\"2\"\r\n      _hover={{\r\n        backgroundColor: color,\r\n        transition: '0.3s ease all',\r\n      }}\r\n    >\r\n      <Link\r\n        fontWeight=\"500\"\r\n        width=\"100%\"\r\n        as={NavLink}\r\n        to={pathLink}\r\n        onClick={pathName === 'Logout' ? logout : onClose}\r\n      >\r\n        {pathName}\r\n      </Link>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default SidebarToggler;\r\n",["102","103"],"D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\HomePage.jsx",["104","105"],"import React from 'react';\r\nimport {\r\n  Box,\r\n  Image,\r\n  Heading,\r\n  Text,\r\n  SimpleGrid,\r\n  useColorModeValue,\r\n  IconButton,\r\n} from '@chakra-ui/react';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport Header from './../ui/Header';\r\nimport Footer from './../ui/Footer';\r\n\r\nconst HomePage = () => {\r\n  const bg = useColorModeValue('gray.100', 'gray.700');\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Box px=\"4\" py=\"2\">\r\n        <Heading as=\"h2\" size=\"lg\" mb=\"4\">\r\n          Your Books\r\n        </Heading>\r\n        <SimpleGrid minChildWidth=\"170px\" spacing=\"20px\">\r\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n            <Image\r\n              roundedTop=\"md\"\r\n              boxSize=\"300px\"\r\n              objectFit=\"cover\"\r\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n              alt=\"Gay Science\"\r\n            />\r\n            <Box padding=\"3\" marginTop=\"0.5\">\r\n              <Heading as=\"h4\" size=\"md\">\r\n                The Gay Science\r\n              </Heading>\r\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n            </Box>\r\n          </Box>\r\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n            <Image\r\n              roundedTop=\"md\"\r\n              boxSize=\"300px\"\r\n              objectFit=\"cover\"\r\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n              alt=\"Gay Science\"\r\n            />\r\n            <Box padding=\"3\" marginTop=\"0.5\">\r\n              <Heading as=\"h4\" size=\"md\">\r\n                The Gay Science\r\n              </Heading>\r\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n            </Box>\r\n          </Box>{' '}\r\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n            <Image\r\n              roundedTop=\"md\"\r\n              boxSize=\"300px\"\r\n              objectFit=\"cover\"\r\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n              alt=\"Gay Science\"\r\n            />\r\n            <Box padding=\"3\" marginTop=\"0.5\">\r\n              <Heading as=\"h4\" size=\"md\">\r\n                The Gay Science\r\n              </Heading>\r\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n            </Box>\r\n          </Box>{' '}\r\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n            <Image\r\n              roundedTop=\"md\"\r\n              boxSize=\"300px\"\r\n              objectFit=\"cover\"\r\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n              alt=\"Gay Science\"\r\n            />\r\n            <Box padding=\"3\" marginTop=\"0.5\">\r\n              <Heading as=\"h4\" size=\"md\">\r\n                The Gay Science\r\n              </Heading>\r\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n            </Box>\r\n          </Box>{' '}\r\n          <Box w=\"100%\" h=\"395px\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n            <Image\r\n              roundedTop=\"md\"\r\n              boxSize=\"300px\"\r\n              objectFit=\"cover\"\r\n              src=\"https://books.google.com/books/content?id=trakSLk9qt0C&printsec=frontcover&img=1&zoom=2&edge=curl&source=gbs_api\"\r\n              alt=\"Gay Science\"\r\n            />\r\n            <Box padding=\"3\" marginTop=\"0.5\">\r\n              <Heading as=\"h4\" size=\"md\">\r\n                The Gay Science\r\n              </Heading>\r\n              <Text size=\"sm\">Friedrich Nietzshe</Text>\r\n            </Box>\r\n          </Box>\r\n        </SimpleGrid>\r\n      </Box>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\SearchPage.jsx",["106"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Heading,\r\n  Text,\r\n  Box,\r\n  Flex,\r\n  InputGroup,\r\n  Input,\r\n  InputRightElement,\r\n  FormControl,\r\n  SimpleGrid,\r\n  IconButton,\r\n  Button,\r\n  FormErrorMessage,\r\n  Spinner,\r\n} from '@chakra-ui/react';\r\nimport Header from './../ui/Header';\r\n\r\nimport { BiSearchAlt } from 'react-icons/bi';\r\nimport BookCard from '../ui/BookCard';\r\n\r\nconst SearchPage = () => {\r\n  const [bookQuery, setBookQuery] = useState('');\r\n  const [books, setBooks] = useState([]);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [searchLoading, setSearchLoading] = useState(false);\r\n  const [moreLoading, setMoreLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const axiosInstance = axios.create();\r\n  delete axiosInstance.defaults.headers.authorization;\r\n  const onChange = e => setBookQuery(e.target.value);\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    getData();\r\n  };\r\n  const getData = async () => {\r\n    if (!bookQuery) {\r\n      setSearchLoading(false);\r\n      setErrorMessage('Please enter a valid name');\r\n      setTimeout(() => {\r\n        setErrorMessage('');\r\n      }, 3000);\r\n    } else {\r\n      setSearchLoading(true);\r\n      const URL = 'https://www.googleapis.com/books/v1/volumes?q=';\r\n      const MAX_ITEMS = '&maxResults=9';\r\n      try {\r\n        const res = await axiosInstance.get(URL + bookQuery + MAX_ITEMS);\r\n        setBooks(res.data.items);\r\n        setTotalItems(res.data.totalItems);\r\n        setSearchLoading(false);\r\n      } catch (error) {\r\n        setSearchLoading(false);\r\n        setErrorMessage(error.message);\r\n        setTimeout(() => {\r\n          setErrorMessage('');\r\n        }, 3000);\r\n      }\r\n    }\r\n  };\r\n  const getMore = async () => {\r\n    setMoreLoading(true);\r\n    const URL = 'https://www.googleapis.com/books/v1/volumes?q=';\r\n    const MAX_ITEMS = '&maxResults=9';\r\n    const START_INDEX = '&startIndex=' + books.length;\r\n    const res = await axiosInstance.get(\r\n      URL + bookQuery + START_INDEX + MAX_ITEMS\r\n    );\r\n    if (!res.data.items) {\r\n      setHasMore(false);\r\n    } else {\r\n      setBooks([...books, ...res.data.items]);\r\n    }\r\n    setMoreLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Box px=\"4\" py=\"2\" textAlign=\"center\">\r\n        <Flex flexDirection=\"column\" alignItems=\"center\">\r\n          <Heading as=\"h2\" size=\"lg\" mb=\"4\" mt=\"20\">\r\n            Search for your next book\r\n          </Heading>\r\n          <Text maxW=\"350px\" textAlign=\"center\" mt=\"-7px\">\r\n            Search the world's most comprehensive index of full-text books\r\n            provided by Google Books API.\r\n          </Text>\r\n          <FormControl\r\n            as=\"form\"\r\n            onSubmit={submitHandler}\r\n            width=\"300px\"\r\n            isInvalid={errorMessage}\r\n          >\r\n            <InputGroup size=\"lg\" w=\"100%\" maxW=\"380px\" mt=\"20px\">\r\n              <Input\r\n                type=\"text\"\r\n                name=\"bookQuery\"\r\n                placeholder=\"Book name...\"\r\n                value={bookQuery}\r\n                onChange={onChange}\r\n              />\r\n              <InputRightElement width=\"4.5rem\" mr=\"-11px\">\r\n                <IconButton\r\n                  type=\"submit\"\r\n                  borderBottomLeftRadius=\"0\"\r\n                  borderTopLeftRadius=\"0\"\r\n                  size=\"lg\"\r\n                  fontSize=\"2xl\"\r\n                  aria-label=\"Logout\"\r\n                  colorScheme=\"green\"\r\n                  color=\"current\"\r\n                  icon={<BiSearchAlt />}\r\n                />\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            {errorMessage && (\r\n              <Text\r\n                mt=\"5px\"\r\n                fontweigh=\"500\"\r\n                color=\"tomato\"\r\n                textAlign=\"left\"\r\n                pl=\"10px\"\r\n              >\r\n                {errorMessage}\r\n              </Text>\r\n            )}\r\n          </FormControl>\r\n        </Flex>\r\n        {searchLoading ? (\r\n          <Spinner mt=\"40px\" textAlign=\"center\" size=\"xl\" />\r\n        ) : (\r\n          books &&\r\n          books.length !== 0 && (\r\n            <Box>\r\n              <Heading\r\n                as=\"h4\"\r\n                size=\"sm\"\r\n                fontWeight=\"600\"\r\n                textAlign=\"left\"\r\n                mt=\"30px\"\r\n              >\r\n                Search Results :\r\n              </Heading>\r\n              <SimpleGrid minChildWidth=\"170px\" spacing=\"20px\" mt=\"20px\">\r\n                {books &&\r\n                  books.map(book => <BookCard key={book.id} book={book} />)}\r\n              </SimpleGrid>\r\n              {totalItems > books.length && hasMore && (\r\n                <Button isLoading={moreLoading} my=\"20px\" onClick={getMore}>\r\n                  Show More\r\n                </Button>\r\n              )}\r\n              {!hasMore && (\r\n                <Text textAlign=\"center\" my=\"20px\">\r\n                  Oops , no more results...\r\n                </Text>\r\n              )}\r\n            </Box>\r\n          )\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\LoginPage.jsx",["107"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Icon,\r\n  Link,\r\n} from '@chakra-ui/react';\r\nimport ErrorMessage from '../ui/ErrorMessage';\r\nimport { AuthContext } from './../contexts/AuthContext/AuthState';\r\nimport { Link as NavLink, Redirect } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { login, loadUser, token, error, user } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    await login({ username, password });\r\n  };\r\n  useEffect(() => {\r\n    if (token) {\r\n      loadUser();\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (error) {\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n    }\r\n  }, [error]);\r\n\r\n  const handleDemo = () => {\r\n    setUsername('demo');\r\n    setPassword('123456');\r\n  };\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n  if (user) return <Redirect to=\"/\" />;\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" mt=\"80px\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        <Box textAlign=\"center\">\r\n          <Heading size=\"md\">Login</Heading>\r\n        </Box>\r\n        <Box mt={4} mb={1} textAlign=\"left\">\r\n          <form onSubmit={handleSubmit}>\r\n            {error && <ErrorMessage message={error} />}\r\n            <FormControl isRequired>\r\n              <FormLabel>Username</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"test\"\r\n                size=\"lg\"\r\n                value={username}\r\n                onChange={event => setUsername(event.currentTarget.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl isRequired mt={6}>\r\n              <FormLabel>Password</FormLabel>\r\n              <InputGroup>\r\n                <Input\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  placeholder=\"*******\"\r\n                  size=\"lg\"\r\n                  value={password}\r\n                  onChange={event => setPassword(event.currentTarget.value)}\r\n                />\r\n                <InputRightElement width=\"3rem\">\r\n                  <Button\r\n                    h=\"1.5rem\"\r\n                    size=\"sm\"\r\n                    onClick={handlePasswordVisibility}\r\n                  >\r\n                    {showPassword ? (\r\n                      <Icon name=\"view-off\" />\r\n                    ) : (\r\n                      <Icon name=\"view\" />\r\n                    )}\r\n                  </Button>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </FormControl>\r\n            <Button\r\n              variantColor=\"teal\"\r\n              variant=\"outline\"\r\n              type=\"submit\"\r\n              width=\"full\"\r\n              mt={4}\r\n            >\r\n              {isLoading ? (\r\n                <CircularProgress isIndeterminate size=\"24px\" color=\"teal\" />\r\n              ) : (\r\n                'Sign In'\r\n              )}\r\n            </Button>\r\n          </form>\r\n          <Text mt=\"20px\" textAlign=\"center\" fontSize=\"sm\">\r\n            Dont have an account?\r\n            <br />\r\n            <Link\r\n              as={NavLink}\r\n              to=\"/signup\"\r\n              _hover={{ textDecoration: 'underline' }}\r\n            >\r\n              signup here{' '}\r\n            </Link>\r\n            or{' '}\r\n            <Link _hover={{ textDecoration: 'underline' }} onClick={handleDemo}>\r\n              use demo\r\n            </Link>\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\ErrorMessage.jsx",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\SignupPage.jsx",["108","109","110"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  CircularProgress,\r\n  Text,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Link,\r\n  Icon,\r\n} from '@chakra-ui/react';\r\nimport ErrorMessage from '../ui/ErrorMessage';\r\nimport { Link as NavLink, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from './../contexts/AuthContext/AuthState';\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { register, loadUser, token, error, user } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (confirmPassword !== password) {\r\n      console.log('error');\r\n    } else {\r\n      console.log(username, password);\r\n      setIsLoading(true);\r\n      await register({ username, password });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (token) {\r\n      loadUser();\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (error) {\r\n      setIsLoading(false);\r\n      setShowPassword(false);\r\n    }\r\n  }, [error]);\r\n\r\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\r\n  if (user) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Flex width=\"full\" align=\"center\" justifyContent=\"center\" mt=\"80px\">\r\n      <Box\r\n        p={8}\r\n        maxWidth=\"500px\"\r\n        borderWidth={1}\r\n        borderRadius={8}\r\n        boxShadow=\"lg\"\r\n      >\r\n        <>\r\n          <Box textAlign=\"center\">\r\n            <Heading>Sign Up</Heading>\r\n          </Box>\r\n          <Box mt={4} mb={2} textAlign=\"left\">\r\n            <form onSubmit={handleSubmit}>\r\n              {error && <ErrorMessage message={error} />}\r\n              <FormControl isRequired>\r\n                <FormLabel>Username</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"username\"\r\n                  size=\"lg\"\r\n                  onChange={event => setUsername(event.currentTarget.value)}\r\n                />\r\n              </FormControl>\r\n              <FormControl isRequired mt={6}>\r\n                <FormLabel>Password</FormLabel>\r\n                <InputGroup>\r\n                  <Input\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    placeholder=\"*******\"\r\n                    size=\"lg\"\r\n                    onChange={event => setPassword(event.currentTarget.value)}\r\n                  />\r\n                  <InputRightElement width=\"3rem\">\r\n                    <Button\r\n                      h=\"1.5rem\"\r\n                      size=\"sm\"\r\n                      onClick={handlePasswordVisibility}\r\n                    >\r\n                      {showPassword ? (\r\n                        <Icon name=\"view-off\" />\r\n                      ) : (\r\n                        <Icon name=\"view\" />\r\n                      )}\r\n                    </Button>\r\n                  </InputRightElement>\r\n                </InputGroup>\r\n              </FormControl>\r\n              <FormControl isRequired mt={6}>\r\n                <FormLabel>Confirm Password</FormLabel>\r\n                <InputGroup>\r\n                  <Input\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    placeholder=\"*******\"\r\n                    size=\"lg\"\r\n                    onChange={event =>\r\n                      setConfirmPassword(event.currentTarget.value)\r\n                    }\r\n                  />\r\n                  <InputRightElement width=\"3rem\">\r\n                    <Button\r\n                      h=\"1.5rem\"\r\n                      size=\"sm\"\r\n                      onClick={handlePasswordVisibility}\r\n                    >\r\n                      {showPassword ? (\r\n                        <Icon name=\"view-off\" />\r\n                      ) : (\r\n                        <Icon name=\"view\" />\r\n                      )}\r\n                    </Button>\r\n                  </InputRightElement>\r\n                </InputGroup>\r\n              </FormControl>\r\n              <Button\r\n                variantColor=\"teal\"\r\n                variant=\"outline\"\r\n                type=\"submit\"\r\n                width=\"full\"\r\n                mt={4}\r\n              >\r\n                {isLoading ? (\r\n                  <CircularProgress isIndeterminate size=\"24px\" color=\"teal\" />\r\n                ) : (\r\n                  'Sign In'\r\n                )}\r\n              </Button>\r\n            </form>\r\n            <Text mt=\"20px\" mr=\"3px\" fontSize=\"sm\" textAlign=\"center\">\r\n              Already have an account?{' '}\r\n              <Link\r\n                as={NavLink}\r\n                to=\"/login\"\r\n                _hover={{ textDecoration: 'underline' }}\r\n              >\r\n                login here\r\n              </Link>\r\n            </Text>\r\n          </Box>\r\n        </>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\BookPage.jsx",["111","112"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Heading,\r\n  Image,\r\n  Spinner,\r\n  Button,\r\n  Text,\r\n  Link,\r\n} from '@chakra-ui/react';\r\nimport Header from './../ui/Header';\r\nimport Footer from './../ui/Footer';\r\n\r\nconst BookPage = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [bookData, setBookData] = useState({});\r\n  const axiosInstance = axios.create();\r\n  delete axiosInstance.defaults.headers.authorization;\r\n  const { bookId } = useParams();\r\n  console.log(bookId);\r\n  useEffect(() => {\r\n    const getBookData = async () => {\r\n      const URL = 'https://www.googleapis.com/books/v1/volumes/';\r\n      const res = await axiosInstance.get(URL + bookId);\r\n      return res.data;\r\n    };\r\n    getBookData().then(data => setBookData(data.volumeInfo));\r\n    setLoading(false);\r\n  }, []);\r\n  if (!bookData.title) {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Flex direction=\"column\" alignItems=\"center\" justifyItems=\"center\">\r\n          <Box>\r\n            <Spinner display=\"block\" size=\"xl\" mt=\"40px\" />\r\n          </Box>\r\n        </Flex>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n  if (bookData)\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Box p=\"20px\">\r\n          <Flex>\r\n            <Box>\r\n              <Image src={bookData?.imageLinks?.thumbnail} />\r\n            </Box>\r\n            <Box pl=\"20px\">\r\n              <Heading as=\"h3\" size=\"lg\">\r\n                {bookData.title}\r\n              </Heading>\r\n              <Heading as=\"h4\" size=\"md\" opacity=\"0.5\">\r\n                {bookData.subtitle}\r\n              </Heading>\r\n              <Text mt=\"8px\" fontWeight=\"600\">\r\n                By {bookData.authors && bookData?.authors[0]}\r\n              </Text>\r\n              <Text mt=\"-3px\" opacity=\"0.5\">\r\n                Published at : {bookData?.publishedDate} , by{' '}\r\n                {bookData?.publisher}\r\n              </Text>\r\n              <Text mt=\"-3px\" opacity=\"0.5\">\r\n                Catagories :{' '}\r\n                {bookData.categories &&\r\n                  bookData.categories.map((cat, ind) => {\r\n                    if (bookData?.categories[ind + 1]) return cat + ' ,';\r\n                    return cat;\r\n                  })}{' '}\r\n              </Text>\r\n              <Text mt=\"-3px\" opacity=\"0.5\">\r\n                Paperback. {bookData.pageCount} pages.\r\n              </Text>\r\n              <Flex mt=\"10px\" alignItems=\"center\">\r\n                <Button size=\"sm\" mr=\"10px\" variant=\"outline\">\r\n                  Add to your list\r\n                </Button>\r\n                <Link ml=\"10px\" href={bookData.previewLink} isExternal>\r\n                  <Text fontSize=\"sm\">Preview</Text>\r\n                </Link>\r\n              </Flex>\r\n            </Box>\r\n          </Flex>\r\n          <Box mt=\"20px\">\r\n            <Heading as=\"h4\" size=\"sm\" fontWeight=\"500\" opacity=\"0.5\">\r\n              Description :\r\n            </Heading>\r\n            <Text mt=\"10px\">{bookData.description}</Text>\r\n          </Box>\r\n        </Box>\r\n        <Footer />\r\n      </>\r\n    );\r\n};\r\n\r\nexport default BookPage;\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\BooksPage.jsx",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\BookCard.jsx",["113"],"import React from 'react';\r\nimport {\r\n  Image,\r\n  Heading,\r\n  Text,\r\n  Box,\r\n  useColorModeValue,\r\n  Tooltip,\r\n  Link,\r\n  Flex,\r\n  HStack,\r\n} from '@chakra-ui/react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ArrowRightIcon } from '@chakra-ui/icons';\r\n\r\nconst BookCard = ({ book }) => {\r\n  const {\r\n    volumeInfo: { authors, imageLinks, title },\r\n    id,\r\n  } = book;\r\n  const bg = useColorModeValue('gray.100', 'gray.700');\r\n  return (\r\n    <Box w=\"100%\" bg={bg} rounded=\"md\" boxShadow=\"base\">\r\n      <Image\r\n        roundedTop=\"md\"\r\n        boxSize=\"300px\"\r\n        objectFit=\"cover\"\r\n        src={imageLinks && imageLinks.thumbnail}\r\n        alt={title}\r\n      />\r\n      <Box padding=\"3\" marginTop=\"0.5\">\r\n        <Tooltip label={title} aria-label=\"book title\">\r\n          <Heading as=\"h4\" size=\"md\" noOfLines=\"2\" alt={title}>\r\n            {title}\r\n          </Heading>\r\n        </Tooltip>\r\n        <Text size=\"sm\" noOfLines=\"1\">\r\n          {authors && authors[0]}\r\n        </Text>\r\n        <Link\r\n          as={NavLink}\r\n          to={`/book/${id}`}\r\n          _hover={{ fontWeight: '500', textDecoration: 'underline' }}\r\n        >\r\n          <HStack\r\n            pt=\"5px\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            spacing=\"5px\"\r\n          >\r\n            <Box mt=\"-2px\" fontWeight=\"600\">\r\n              More\r\n            </Box>{' '}\r\n            <ArrowRightIcon w={3} h={3} />\r\n          </HStack>\r\n        </Link>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BookCard;\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\ui\\Footer.jsx",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\utils\\setAuthToken.js",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\contexts\\AuthContext\\AuthState.js",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\contexts\\AuthContext\\authReducer.js",["114"],"import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT,\r\n  REGISTER_FAIL,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        user: action.payload.user,\r\n        isAuthenticated: true,\r\n        loading: true,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case REGISTER_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\firas\\workspaces\\bookshelf\\web\\src\\contexts\\types.js",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\configs\\config.js",[],"D:\\firas\\workspaces\\bookshelf\\web\\src\\hooks\\useAuthContext.js",["115"],"D:\\firas\\workspaces\\bookshelf\\web\\src\\pages\\ProtectedRoute.jsx",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"124","line":2,"column":15,"nodeType":"122","messageId":"123","endLine":2,"endColumn":19},{"ruleId":"120","severity":1,"message":"124","line":9,"column":3,"nodeType":"122","messageId":"123","endLine":9,"endColumn":7},{"ruleId":"116","replacedBy":"125"},{"ruleId":"118","replacedBy":"126"},{"ruleId":"120","severity":1,"message":"127","line":9,"column":3,"nodeType":"122","messageId":"123","endLine":9,"endColumn":13},{"ruleId":"120","severity":1,"message":"128","line":11,"column":10,"nodeType":"122","messageId":"123","endLine":11,"endColumn":18},{"ruleId":"120","severity":1,"message":"129","line":15,"column":3,"nodeType":"122","messageId":"123","endLine":15,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":37,"column":6,"nodeType":"132","endLine":37,"endColumn":8,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"134","line":26,"column":10,"nodeType":"122","messageId":"123","endLine":26,"endColumn":20},{"ruleId":"120","severity":1,"message":"135","line":26,"column":22,"nodeType":"122","messageId":"123","endLine":26,"endColumn":35},{"ruleId":"130","severity":1,"message":"131","line":44,"column":6,"nodeType":"132","endLine":44,"endColumn":8,"suggestions":"136"},{"ruleId":"120","severity":1,"message":"137","line":18,"column":10,"nodeType":"122","messageId":"123","endLine":18,"endColumn":17},{"ruleId":"130","severity":1,"message":"138","line":32,"column":6,"nodeType":"132","endLine":32,"endColumn":8,"suggestions":"139"},{"ruleId":"120","severity":1,"message":"140","line":10,"column":3,"nodeType":"122","messageId":"123","endLine":10,"endColumn":7},{"ruleId":"141","severity":1,"message":"142","line":10,"column":1,"nodeType":"143","endLine":44,"endColumn":3},{"ruleId":"120","severity":1,"message":"144","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":15},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Text' is defined but never used.",["145"],["146"],"'IconButton' is defined but never used.","'FiLogOut' is defined but never used.","'FormErrorMessage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadUser' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["147"],"'isLoggedIn' is assigned a value but never used.","'setIsLoggedIn' is assigned a value but never used.",["148"],"'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosInstance' and 'bookId'. Either include them or remove the dependency array.",["149"],"'Flex' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"150","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [loadUser, token]",{"range":"155","text":"156"},{"range":"157","text":"156"},"Update the dependencies array to be: [axiosInstance, bookId]",{"range":"158","text":"159"},[987,989],"[loadUser, token]",[1247,1249],[913,915],"[axiosInstance, bookId]"]